<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd     
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

	<context:component-scan base-package="com.x" />

	<util:properties id="db" location="classpath:db.properties" />
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="#{db.driver}" />
		<property name="jdbcUrl" value="#{db.url}" />
		<property name="user" value="#{db.user}" />
		<property name="password" value="#{db.pwd}" />
		<property name="minPoolSize" value="#{db.minpoolsize}" />
		<property name="maxPoolSize" value="#{db.maxpoolsize}" />
	</bean>
	<!-- 配置mybatis SqlSessionFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:com/x/entity/*.xml" />
	</bean>
	<!-- 由Spring管理Mapper 接口的实例 -->
	<!-- MapperFactoryBean 相当于OEM工厂 根据指定的参数mapperInterface 类决定生产对象 的类型，这里生产的是DeptMapper类型的对象 -->
	<!-- <bean id="deptMapper" class="org.mybatis.spring.mapper.MapperFactoryBean"> 
		<property name="mapperInterface" value="com.tarena.entity.DeptMapper"/> <property 
		name="sqlSessionFactory" ref="sqlSessionFactory" /> </bean> -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.x.dao" />
		<!-- 扫描自定义的接口 -->
	</bean>
	<!-- 配置SqlSessionTemple -->

	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<!-- 构造器注入 -->
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<!-- 更换Spring其他试图处理器都是viewResolver接口的实现类 可以直接实现ViewResolver接口, 创舰载机的试图处理规则 -->
	<bean id="internalResourceViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<mvc:annotation-driven />
</beans>









